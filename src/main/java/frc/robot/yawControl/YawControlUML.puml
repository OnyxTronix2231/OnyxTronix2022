@startuml
'https://plantuml.com/sequence-diagram
!includeurl https://raw.githubusercontent.com/matthewjosephtaylor/plantuml-style/40c705da84ef9e1c12591094c75f511e2a41c137/style.pu
abstract class SubsystemBase
abstract class CommandBase

TurretComponentsBase ----|> TurretComponents
TurretComponentsBase --* Turret
Turret ---|> SubsystemBase
RotateByAngle --|> CommandBase
RotateToAngle --|> CommandBase
RotateByAngleOnce --|> RotateByAngle
RotateToAngleOnce --|> RotateToAngle
Turret --o RotateByAngle
Turret --o RotateToAngle
Turret ---o RotateBySpeed
RotateByVision --|> RotateByAngle

YawControl --|> Turret
RotateToAngleRTF --|> RotateToAngle
RotateToAngleRTFOnce --|> RotateToAngleRTF
YawControl --o RotateToAngleRTF
RotateNonVisionDependent --|> RotateToAngleRTF
RotateByPose --|> RotateToAngleRTF


interface TurretComponents {
    WPI_TalonFX getMotor()
    Counter getEncoder()
    CtreMotionMagicController getController()
}

class TurretComponentsBase {
    WPI_TalonFX motor
    CtreEncoder encoder
    CtreMotionMagicController controller
}

class Turret {
    TurretComponents components
    void periodic()
    void configMotorLimits()
    double getCurrentAngle()
    void stop()
    void initMoveByDegree()
    void initMoveToDegree()
    void updateMoveByDegree()
    void updateMoveToDegree()
    double degToEnc()
    double encToDeg()
    double fixDeg()
    boolean isOnTarget()
}

class RotateByAngle {
    Turret turret
    DoubleSupplier angleSupplier
    void initialize()
    void execute()
    void end()
}

class RotateToAngle {
    Turret turret
    DoubleSupplier angleSupplier
    void initialize()
    void execute()
    void end()
}

class RotateByVision {
    Vision vision
    Turret turret
}

class RotateByAngleOnce {
    void isFinished()
}

class RotateToAngleOnce {
    void isFinished()
}

class RotateBySpeed {
    Turret turret
    DoubleSupplier speedSupplier
    void initialize()
    void execute()
    void end()
}

class YawControl {
    DriveTrain driveTrain
    double getTurretAngleRTF()
    double getAngleRTRToFixAngleRTF()
    double getAngleToTargetRTF()
}

class RotateToAngleRTF {
    YawControl yawControl
}

class RotateToAngleRTFOnce {
}

class RotateNonVisionDependent {
    YawControl yawControl
    Vision vision
}

class RotateByPose {
    YawControl yawControl
}
@enduml
